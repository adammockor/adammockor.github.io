// Lighting Grid Tool
// Author: Vladimir Pittner
// Email: iam@vladimirpittner.sk

@mixin grid-base($columns, $gutter, $row-space: 0) {

  $grid-class: '.col-';

  padding: 0 $gutter;
  
  .row {
    width: auto;
    margin: 0 #{-$gutter};
    *zoom: 1;
    &:before,
    &:after {
      content: ""; 
      display: table;
    }
    &:after {
      clear: both;
    }
    &.row-space {
      margin: $row-space #{-$gutter};
    }
  }

  @for $i from 1 through $columns {
    @if ($i == $columns) {
      $grid-class: $grid-class + $i;
    } @else {
      $grid-class: $grid-class + $i + ", .col-";
    }
  }

  #{$grid-class} {
    min-height: 1px;
    padding: 0 $gutter;
    position: relative;
    float: left;
  }

}

@mixin grid-gutters($columns, $gutter) {

  $grid-class: '.col-';

  padding: 0 $gutter;

  .row, .row.row-space {
    margin-left: -$gutter;
    margin-right: -$gutter;
  }

  @for $i from 1 through $columns {
    @if ($i == $columns) {
      $grid-class: $grid-class + $i;
    } @else {
      $grid-class: $grid-class + $i + ", .col-";
    }
  }

  #{$grid-class} {
    padding: 0 $gutter;
  }
}

@mixin grid-columns($columns-base, $columns) {
  $column-base-size: 100% / $columns-base;
  $ratio: $columns-base / $columns;
  $step: 1;
  $i: 1;
  $class: ".col-";

  @while $step <= $columns {

    @if ($i + 1) / $ratio <= $step {
      $class: $class + $i + ", .col-";
    }
    @if ($i + 1) / $ratio > $step {
      $class: $class + $i;

      #{$class} {
        width: $column-base-size * $step * $ratio;
      }

      $class: ".col-";
    }
    @if $i / $ratio >= $step {
      $step: $step + 1;
    }

    $i: $i + 1;
  }
}

@mixin grid-columns-prefixed($columns-base, $columns, $prefix: "") {
  $column-base-size: 100% / $columns-base;
  $ratio: $columns-base / $columns;
  $step: 1;
  $i: 1;
  $class: ".col-" + $prefix + "-";

  @while $step <= $columns {
    @if ($i + 1) / $ratio > $step {
      #{$class}#{$step} {
        width: $column-base-size * $step * $ratio;
      }
    }
    @if $i / $ratio >= $step {
      $step: $step + 1;
    }

    $i: $i + 1;
  }

}

@mixin grid-offsets($columns-base, $columns) {
  $column-base-size: 100% / $columns-base;
  $ratio: $columns-base / $columns;
  $step: 0;
  $i: 0;
  $class: ".ofst-";

  @while $step <= $columns {

    @if ($i + 1) / $ratio <= $step {
      $class: $class + $i + ", .ofst-";
    }
    @if ($i + 1) / $ratio > $step {
      $class: $class + $i;

      #{$class} {
       margin-left: $column-base-size * $step * $ratio;
      }

      $class: ".ofst-";
    }
    @if $i / $ratio >= $step {
      $step: $step + 1;
    }

    $i: $i + 1;
  }

   #{$class}center {
    float: none;
    margin: 0 auto;
  }
}

@mixin grid-offsets-prefixed($columns-base, $columns, $prefix: "") {
  $column-base-size: 100% / $columns-base;
  $ratio: $columns-base / $columns;
  $step: 0;
  $i: 1;
  $class: ".ofst-";
  @if $prefix != "" {
    $class: $class + $prefix + "-";
  }


  @while $step < $columns {
    @if ($i + 1) / $ratio > $step {
      #{$class}#{$step} {
        margin-left: $column-base-size * $step * $ratio;
      }
    }
    @if $i / $ratio >= $step {
      $step: $step + 1;
    }

    $i: $i + 1;
  }

  #{$class}center {
    float: none;
    margin: 0 auto;
  }
}

@mixin form-columns($columns-base, $columns, $gutter) {
  $column-base-size: 100% / $columns-base;
  $ratio: $columns-base / $columns;
  $step: 1;
  $i: 1;
  $class: ".form-col-";
  
  $grid-class: '.form-col-';

  @for $i from 1 through $columns {
    @if ($i == $columns) {
      $grid-class: $grid-class + $i;
    } @else {
      $grid-class: $grid-class + $i + ", .form-col-";
    }
  }

  #{$grid-class} {
    min-height: 1px;
    padding: 0 $gutter;
    position: relative;
    float: left;
  }

  @while $step <= $columns {

    @if ($i + 1) / $ratio <= $step {
      $class: $class + $i + ", .form-col-";
    }
    @if ($i + 1) / $ratio > $step {
      $class: $class + $i;

      #{$class} {
        width: $column-base-size * $step * $ratio;
      }

      $class: ".form-col-";
    }
    @if $i / $ratio >= $step {
      $step: $step + 1;
    }

    $i: $i + 1;
  }
}

@mixin form-gutters($columns, $gutter) {

  $grid-class: '.form-col-';
  
  .form-row {
    margin: 0 #{-$gutter};
    *zoom: 1;
    &:before,
    &:after {
      content: ""; 
      display: table;
    }
    &:after {
      clear: both;
    }
  }

  @for $i from 1 through $columns {
    @if ($i == $columns) {
      $grid-class: $grid-class + $i;
    } @else {
      $grid-class: $grid-class + $i + ", .form-col-";
    }
  }

  #{$grid-class} {
    padding: 0 $gutter;
  }
}

@mixin form-offsets($columns-base, $columns) {
  $column-base-size: 100% / $columns-base;
  $ratio: $columns-base / $columns;
  $step: 0;
  $i: 1;
  $class: ".form-ofst-";

  @while $step < $columns {
    @if ($i + 1) / $ratio > $step {
      #{$class}#{$step} {
        margin-left: $column-base-size * $step * $ratio;
      }
    }
    @if $i / $ratio >= $step {
      $step: $step + 1;
    }

    $i: $i + 1;
  }

  #{$class}center {
    float: none;
    margin: 0 auto;
  }
}

@mixin form-columns-prefixed($columns-base, $columns, $prefix: "") {
  $column-base-size: 100% / $columns-base;
  $ratio: $columns-base / $columns;
  $step: 1;
  $i: 1;
  $class: ".form-col-" + $prefix + "-";

  @while $step <= $columns {
    @if ($i + 1) / $ratio > $step {
      #{$class}#{$step} {
        width: $column-base-size * $step * $ratio;
      }
    }
    @if $i / $ratio >= $step {
      $step: $step + 1;
    }

    $i: $i + 1;
  }

}

@mixin form-offsets-prefixed($columns-base, $columns, $prefix: "") {
  $column-base-size: 100% / $columns-base;
  $ratio: $columns-base / $columns;
  $step: 0;
  $i: 1;
  $class: ".form-ofst-";
  @if $prefix != "" {
    $class: $class + $prefix + "-";
  }


  @while $step < $columns {
    @if ($i + 1) / $ratio > $step {
      #{$class}#{$step} {
        margin-left: $column-base-size * $step * $ratio;
      }
    }
    @if $i / $ratio >= $step {
      $step: $step + 1;
    }

    $i: $i + 1;
  }

  #{$class}center {
    float: none;
    margin: 0 auto;
  }
}